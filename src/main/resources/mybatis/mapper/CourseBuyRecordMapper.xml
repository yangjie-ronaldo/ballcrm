<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.nothink.ballcrm.mapper.CourseBuyRecordMapper" >

  <select id="selectByPrimaryKey" resultType="org.nothink.ballcrm.entity.CourseBuyRecordEntity" parameterType="java.lang.Integer" >
    select 
    *
    from course_buy_record
    where pkid = #{pkid,jdbcType=INTEGER}
  </select>

  <!--查询某学员买营销课的列表 就返回一条-->
  <select id="getMarketCourseBuyedList" resultType="org.nothink.ballcrm.entity.CourseBuyRecordEntity">
    select buy.* from course_buy_record buy inner join course_type c on buy.course_type_id=c.pkid and c.phase_id=3
    where 1=1 and buy.sid=#{sid} limit 2
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_buy_record
    where pkid = #{pkid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.nothink.ballcrm.entity.CourseBuyRecordEntity" >
    insert into course_buy_record (pkid, sid, eid, 
      course_type_id, fee, create_date,note,teacher_id,has_market
      )
    values (#{pkid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, 
      #{courseTypeId,jdbcType=INTEGER}, #{fee,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP},
      #{note,jdbcType=VARCHAR},#{teacherId,jdbcType=INTEGER},#{hasMarket,jdbcType=INTEGER},

      )
  </insert>
  <insert id="insertSelective" parameterType="org.nothink.ballcrm.entity.CourseBuyRecordEntity" >
    insert into course_buy_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkid != null" >
        pkid,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="courseTypeId != null" >
        course_type_id,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="hasMarket != null" >
        has_market,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkid != null" >
        #{pkid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="courseTypeId != null" >
        #{courseTypeId,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="hasMarket != null" >
        #{hasMarket,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.nothink.ballcrm.entity.CourseBuyRecordEntity" >
    update course_buy_record
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="courseTypeId != null" >
        course_type_id = #{courseTypeId,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="hasMarket != null" >
        has_market = #{hasMarket,jdbcType=INTEGER},
      </if>
    </set>
    where pkid = #{pkid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nothink.ballcrm.entity.CourseBuyRecordEntity" >
    update course_buy_record
    set sid = #{sid,jdbcType=INTEGER},
      eid = #{eid,jdbcType=INTEGER},
      course_type_id = #{courseTypeId,jdbcType=INTEGER},
      fee = #{fee,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      has_market = #{hasMarket,jdbcType=INTEGER}
    where pkid = #{pkid,jdbcType=INTEGER}
  </update>
</mapper>